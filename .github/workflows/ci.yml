name: CI

on:
  push:
    branches: [main]
    tags: ["releases/**"]
  pull_request:
    branches: ["*"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: arduino/setup-protoc@v1
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn
          registry-url: https://registry.npmjs.org

      - run: yarn install --immutable
      - run: yarn lint:ci
      - run: yarn typecheck
      - run: yarn test
      - run: yarn update-generated-files

      - name: Ensure generated files are up to date
        run: |
          changes=$(git status --porcelain)
          if [ -n "$changes" ]; then
            echo "::error::The following generated files need to be updated. Run `yarn update-generated-files` to update them."
            echo "$changes"
            exit 1
          else
            echo "Generated schemas are up to date!"
          fi

      - name: Validate protobuf definitions
        run: protoc --proto_path=schemas/proto schemas/proto/**/*.proto --descriptor_set_out=/dev/null

      - name: Publish to NPM
        if: ${{ startsWith(github.ref, 'refs/tags/releases/typescript/v') }}
        run: yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

  python:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v3
      - uses: arduino/setup-protoc@v1
      - uses: actions/setup-python@v4
        with:
          python-version: 3.7
          cache: pipenv
      - run: pip install pipenv==2022.7.24

      - run: make test
      - run: make build

      - name: Publish foxglove-schemas-protobuf to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: ${{ !github.event.pull_request.head.repo.fork && github.actor != 'dependabot[bot]' }}
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_API_TOKEN }}
          packages_dir: python/foxglove-schemas-protobuf/dist
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

      - name: Publish foxglove-schemas-protobuf to PyPI
        if: |
          !github.event.pull_request.head.repo.fork &&
          github.actor != 'dependabot[bot]' &&
          startsWith(github.ref, 'refs/tags/releases/python/foxglove-schemas-protobuf/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: python/foxglove-schemas-protobuf/dist

  ros:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - docker_image: rostooling/setup-ros-docker:ubuntu-bionic-ros-melodic-ros-base-latest
            ros_distribution: melodic
            ros_version: 1
          - docker_image: rostooling/setup-ros-docker:ubuntu-focal-ros-noetic-ros-base-latest
            ros_distribution: noetic
            ros_version: 1
          - docker_image: rostooling/setup-ros-docker:ubuntu-focal-ros-foxy-ros-base-latest
            ros_distribution: foxy
            ros_version: 2
          - docker_image: rostooling/setup-ros-docker:ubuntu-focal-ros-galactic-ros-base-latest
            ros_distribution: galactic
            ros_version: 2
          - docker_image: rostooling/setup-ros-docker:ubuntu-jammy-ros-humble-ros-base-latest
            ros_distribution: humble
            ros_version: 2
          - docker_image: rostooling/setup-ros-docker:ubuntu-jammy-ros-rolling-ros-base-latest
            ros_distribution: rolling
            ros_version: 2
    name: "ROS ${{ matrix.ros_distribution }}"
    container:
      image: ${{ matrix.docker_image }}
    steps:
      - name: setup directories
        run: mkdir -p ros_ws/src
      - name: checkout
        uses: actions/checkout@v2
        with:
          path: ros_ws/src
      - name: build and test ros1
        if: ${{ matrix.ros_version == 1 }}
        uses: ros-tooling/action-ros-ci@master
        with:
          package-name: foxglove_msgs
          target-ros1-distro: ${{ matrix.ros_distribution }}
          vcs-repo-file-url: ""
      - name: build and test ros2
        if: ${{ matrix.ros_version == 2 }}
        uses: ros-tooling/action-ros-ci@master
        with:
          package-name: foxglove_msgs
          target-ros2-distro: ${{ matrix.ros_distribution }}
          vcs-repo-file-url: ""
